import Head from 'next/head'
import Router from "next/router";
import dynamic from 'next/dynamic'
import{useState,useEffect} from "react"
import Search from '../components/Search'
import Spinner from '../components/Spinner'
import IpInfo from '../components/IpInfo'
import styles from '../styles/App.module.css'


const DynamicComponentWithNoSSR = dynamic(
  () => import('../components/Map'),
  { ssr: false }
)


export async function getServerSideProps({query}){

  

  let queryString;
  if (query.hasOwnProperty('domain')){
    queryString = `domain=${query.domain}`
  }else if(query.hasOwnProperty('ipAddress')){
    queryString = `ipAddress=${query.ipAddress}`
  }else{
    const ipResponse = await fetch(`https://api.ipify.org?format=json`)
    const ipInfo = await ipResponse.json()
    queryString = `ipAddress=${ipInfo.ip}`
    console.log(queryString)
  }

  const response = await fetch(`https://geo.ipify.org/api/v2/country?apiKey=${process.env.IPIFY_API_KEY}&${queryString}`)
  const locationData = await response.json()

  const mapResponse = await fetch(`https://www.mapquestapi.com/geocoding/v1/address?key=${process.env.MAPQUEST_API_KEY}&location=${locationData.location.region} ${locationData.location.country}`)
  const mapData = await mapResponse.json()


   return {
     props:{
       locationData,
       mapInfo: mapData.results[0].locations[0].latLng

     }
   }


}

export default function Home({locationData,mapInfo}) {

  const [loading, setLoading] = useState(false)
  useEffect(() => {
    const start = () => {
      setLoading(true);
    };
    const end = () => {
      setLoading(false);
    };
    Router.events.on("routeChangeStart", start);
    Router.events.on("routeChangeComplete", end);
    Router.events.on("routeChangeError", end);
    return () => {
      Router.events.off("routeChangeStart", start);
      Router.events.off("routeChangeComplete", end);
      Router.events.off("routeChangeError", end);
    };
  }, []);
  return (
    <div>
      <Head>
        <title>IP Address Tracker</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32.png" />
      </Head>
<div className={styles.container}>
      <main className={styles.ip_tracker_main}>
        <div className={styles.info_wrapper}>
          <h1>IP Address Tracker</h1>
          <Search  />
          {loading && <Spinner />}
          {(locationData && !loading) && <IpInfo  ipAddress={locationData.ip} location={locationData.location}  isp={locationData.isp}
          />}
          
        </div>
       {(mapInfo && !loading) && <DynamicComponentWithNoSSR lat={mapInfo.lat} lng={mapInfo.lng}/>}
      </main>
</div>

      </div>
  )
}
